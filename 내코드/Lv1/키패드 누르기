function solution(numbers, hand) {
    let left = '*'
    let right = '#'
    let answer = '';
    
    let distance = numbers.map((ele, idx)=>{
        let temp = '';
        switch(ele){
            case 1: case 4: case 7:
                temp += 'L';
                break
            case 3: case 6: case 9:
                temp += 'R';
                break
        }
       return temp
    })
    
    
    return distance;
}

// 왼쪽에 처음 시작은 * 오른쪽의 처음 시작은 # => 처음 눌러야할 숫자는 * 또는 # 기준으로 시작됨
// => Reduce를 사용해서 acc[left] = [*], acc[right] = [#] 
// distance객체로 네이밍하여 왼손, 오른손 위치 담기 = numbers.reduce((acc, ele, idx)=>{
//     acc[ele === 1 || 4 || 7] = []
// }, {})


// distance객체에서 map을 돌려 거리비교
// if문에서 조건을 걸어서 break걸며 확인
// 1, 4, 7은 무조건 L
// 3, 6, 9는 무조건 R
// 2, 5, 8, 0은 distance에서 거리로 결정
// 같은 경우, hand에 따라 결정
// 2, 5, 8, 0은 때에 따라 결정되는데 행과 열의 칸에 따라 결정됨
// 왼손위치와 오른손 위치가 눌러야할 숫자와 동일할 경우, hand에 따라 결정됨
